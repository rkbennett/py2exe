name: CI
on: [push, pull_request]

jobs:
  matrix:
    name: Generate matrix
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v2
      - id: set-matrix
        run: |
          TASKS=$(echo $(cat .github/workflows/matrix.json) | sed 's/ //g' )
          echo "::set-output name=matrix::$TASKS"

  sdist:
    name: Source distribution
    runs-on: windows-2019
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Check Python install
        run: |
          which python
          python --version
          python -c "import struct; print(struct.calcsize('P') * 8)"
          which pip
          pip --version

      - name: Install Python dependencies
        run: |
          python -m pip install -U pip setuptools wheel
          python -m pip install -U cachetools pefile

      - name: Build
        run: python setup.py sdist

      - name: Prepare for deployment
        run: |
          dir dist
          Get-ChildItem dist -File | Foreach-Object {$sdistname = $_.Name}
          echo $sdistname
          echo "SDISTNAME=$sdistname" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Deploy
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.SDISTNAME }}
          path: |
            dist/${{ env.SDISTNAME }}

  build:
    needs: matrix
    name: Build
    runs-on: windows-2019
    strategy:
      matrix:
        cfg: ${{ fromJson(needs.matrix.outputs.matrix) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.cfg.python-version }}
          architecture: ${{ matrix.cfg.python-arch }}

      - name: Install Python dependencies
        run: |
          python -m pip install -U pip setuptools wheel
          python -m pip install -U cachetools pefile

      - name: Check Python install
        run: |
          which python
          python --version
          python -c "import struct; print(struct.calcsize('P') * 8)"
          which pip
          pip --version

      - name: Install Python dependencies
        run: |
          python -m pip install -U pip setuptools wheel
          python -m pip install -U cachetools pefile

      - name: Build
        run: |
          pwd
          dir
          build.cmd

      - name: Prepare for deployment
        run: |
          dir dist
          $ver = (findstr __version__ .\py2exe\version.py).split("'")[1]
          echo $ver
          echo "VER=$ver" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          $wheelname = python .github\helpers\get_wheel_name.py $ver
          echo $wheelname
          echo "WHEELNAME=$wheelname" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Deploy
        uses: actions/upload-artifact@v2
        with:
          name: build/_memimport.obj
          path: |
            build/_memimport.obj
